name: Security

on:
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'go.mod'
      - 'go.sum'
      - '**/*.go'

permissions:
  contents: read
  security-events: write

jobs:
  vulnerability-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ubuntu-latest-go-1.24-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ubuntu-latest-go-1.24-
            ubuntu-latest-go-

      - name: Download dependencies
        run: go mod download

      - name: Run Gosec Security Scanner
        uses: securecodewarrior/github-action-gosec@master
        with:
          args: '-fmt sarif -out gosec.sarif ./...'
        continue-on-error: true

      - name: Upload Gosec SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gosec.sarif
        if: always()

      - name: Run govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck -json ./... > govulncheck.json || true

      - name: Process govulncheck results
        run: |
          if [ -s govulncheck.json ] && jq -e '.vulns | length > 0' govulncheck.json > /dev/null; then
            echo "Vulnerabilities found:"
            jq -r '.vulns[] | "- \(.osv.id): \(.osv.summary)"' govulncheck.json
            echo "See full report in govulncheck.json"
            exit 1
          else
            echo "No vulnerabilities found"
          fi

      - name: Run Nancy (dependency vulnerability scanner)
        run: |
          go list -json -m all | docker run --rm -i sonatypecommunity/nancy:latest sleuth
        continue-on-error: true

      - name: Upload vulnerability reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            gosec.sarif
            govulncheck.json
          retention-days: 30

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          allow-ghsas: |
            GHSA-xxxx-xxxx-xxxx
          deny-licenses: |
            GPL-2.0
            GPL-3.0

  codeql:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [ 'go' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: +security-and-quality

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build project
        run: go build ./cmd

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  container-security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for scanning
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: mdnotes:security-scan
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy container security scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'mdnotes:security-scan'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-fs-results.sarif'

      - name: Upload Trivy filesystem scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-fs-results.sarif'

  sbom-generation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ubuntu-latest-go-1.24-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ubuntu-latest-go-1.24-
            ubuntu-latest-go-

      - name: Download dependencies
        run: go mod download

      - name: Install syft for SBOM generation
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM
        run: |
          syft . -o spdx-json=mdnotes-sbom.spdx.json
          syft . -o cyclonedx-json=mdnotes-sbom.cyclonedx.json

      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sbom-reports
          path: |
            mdnotes-sbom.spdx.json
            mdnotes-sbom.cyclonedx.json
          retention-days: 90

  security-summary:
    runs-on: ubuntu-latest
    needs: [vulnerability-scan, codeql, container-security, sbom-generation]
    if: always()
    steps:
      - name: Generate security summary
        run: |
          echo "## Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Scan Type | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Vulnerability Scan | ${{ needs.vulnerability-scan.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| CodeQL Analysis | ${{ needs.codeql.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Container Security | ${{ needs.container-security.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| SBOM Generation | ${{ needs.sbom-generation.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "View detailed results in the Security tab of this repository." >> $GITHUB_STEP_SUMMARY